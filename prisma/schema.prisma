// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  uniqueCode String   @unique
  accountId  String
  password   String
  name       String
  role       String
  student    Student?
  teacher    Teacher?
}

model Student {
  id        Int       @id @default(autoincrement())
  email     String
  sex       String
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
  subjects  Subject[]
  doneAns   AnsweredActivity[]
  answers   AnsweredQuestion[]
  periods   Period[]
  pregnancy Pregnancy[]
}

model Teacher {
  id        Int       @id @default(autoincrement())
  email     String
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique
  subjects  Subject[]
}

model Subject {
  id          Int       @id @default(autoincrement())
  code        String
  title       String
  description String
  uniqueCode  String    @unique
  teacher     Teacher   @relation(fields: [teacherId], references: [id])
  teacherId   Int
  students    Student[]
  activities  Activity[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Activity {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  type        String
  subject     Subject   @relation(fields: [subjectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subjectId   Int
  startDate   String
  endDate     String
  questions   Question[]
  answers     AnsweredActivity[]
  material    Material?
}

model Question {
  id         Int      @id @default(autoincrement())
  prompt     String
  answer     String
  choices    String
  type       String
  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  activityId Int
  answers    AnsweredQuestion[]
  file       File?
}

model AnsweredActivity {
  id          Int       @id @default(autoincrement())
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
  activity    Activity  @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  activityId  Int
  score       String
  answeredAt  DateTime  @default(now())
}

model AnsweredQuestion {
  id          Int       @id @default(autoincrement())
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  questionId  Int
  answer      String 
}

model Period {
  id          Int       @id @default(autoincrement())
  startDate   DateTime
  endDate     DateTime
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
}

model Pregnancy {
  id          Int       @id @default(autoincrement())
  sexDate     DateTime
  laborDate   DateTime
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
}

model File {
  id          Int       @id @default(autoincrement())
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  questionId  Int       @unique
  fileName    String
}

model Material {
  id          Int       @id @default(autoincrement())
  activity    Activity  @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  activityId  Int       @unique
  fileName    String
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
